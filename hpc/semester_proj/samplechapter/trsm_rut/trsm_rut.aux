\relax 
\@writefile{toc}{\contentsline {chapter}{\numberline {9}Triangular Solve (with Multiple RHSs)\\ $ B \leftarrow B U^{-T} $ }{119}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{chapter:trsm_rut}{{9}{119}}
\@writefile{toc}{ {by {\bf  Field G. Van Zee and Patrick J. Walkup}} 13 May 2002: DONE.}
\@writefile{toc}{\contentsline {section}{\numberline {9.1}Algorithms That Start By Partitioning $ U $}{119}}
\newlabel{sec:trsm_rut:U}{{9.1}{119}}
\@writefile{lof}{\contentsline {figure}{\numberline {9.1}{\ignorespaces Possible loop-invariants when partitioning $ U $ into quadrants. Here $ P_X $ is the most prominent part of the loop-invariant $ P_{\rm  inv}$. The reasons for declaring the loop-invariant infeasible refer to the reasons given on page 11 of the handout. The reason for rejecting the loop-invariant may not be the only reason for doing so.}}{120}}
\newlabel{fig:TRSM_RUT_variants}{{9.1}{120}}
\newlabel{eqn:utrsm_rut}{{9.1}{120}}
\@writefile{toc}{\contentsline {subsection}{\numberline {9.1.1}Loop-invariant 1}{120}}
\newlabel{eqn:utrsm_rut:p1}{{9.2}{120}}
\newlabel{eqn:utrsm_rut:p2}{{9.3}{121}}
\@writefile{toc}{\contentsline {subsubsection}{Unblocked algorithm}{121}}
\newlabel{eqn:utrsm_rut:bu}{{9.4}{121}}
\newlabel{eqn:utrsm_rut:au}{{9.5}{121}}
\@writefile{toc}{\contentsline {subsubsection}{Blocked Algorithms}{121}}
\@writefile{toc}{\contentsline {subsubsection}{Implementation}{121}}
\@writefile{lof}{\contentsline {figure}{\numberline {9.2}{\ignorespaces Annotated unblocked algorithm for loop-invariant 1.}}{122}}
\newlabel{fig:ws:utrsm_rut}{{9.2}{122}}
\@writefile{lof}{\contentsline {figure}{\numberline {9.3}{\ignorespaces Annotated blocked algorithm for loop-invariant 1.}}{123}}
\newlabel{fig:ws:utrsm_rut_blk}{{9.3}{123}}
\@writefile{lof}{\contentsline {figure}{\numberline {9.4}{\ignorespaces Unblocked algorithm for loop-invariants 1 and 2 using FLAME.}}{124}}
\newlabel{fig:trsm_rut_lazy_unb}{{9.4}{124}}
\@writefile{lof}{\contentsline {figure}{\numberline {9.5}{\ignorespaces Blocked algorithm for loop-invariants 1 and 2 using FLAME. Recursion is optionally supported.}}{125}}
\newlabel{fig:trsm_rut_lazy_blk}{{9.5}{125}}
\@writefile{toc}{\contentsline {subsection}{\numberline {9.1.2}Loop-invariant 2}{126}}
\newlabel{eqn:utrsm_rut:p3}{{9.6}{126}}
\@writefile{toc}{\contentsline {subsubsection}{Unblocked algorithm}{126}}
\newlabel{eqn:utrsm_rut:var2:before}{{9.8}{126}}
\newlabel{eqn:utrsm_rut:var2:after}{{9.9}{126}}
\@writefile{toc}{\contentsline {subsubsection}{Blocked Algorithms}{126}}
\@writefile{toc}{\contentsline {subsubsection}{Implementation}{126}}
\@writefile{lof}{\contentsline {figure}{\numberline {9.6}{\ignorespaces Annotated unblocked algorithm for loop-invariant 2.}}{127}}
\newlabel{fig:ws:utrsm_rut:var2}{{9.6}{127}}
\@writefile{lof}{\contentsline {figure}{\numberline {9.7}{\ignorespaces Annotated blocked algorithm for loop-invariant 2.}}{128}}
\newlabel{fig:ws:utrsm_rut:var2:blk}{{9.7}{128}}
\@writefile{toc}{\contentsline {section}{\numberline {9.2}Performance}{129}}
\@writefile{lof}{\contentsline {figure}{\numberline {9.8}{\ignorespaces Performance of the variant 1 (left) and variant 2 (right) triangular matrix solve (with multiple RHS) algorithms for a block size of $ 40 $ (top) and $ 80 $ (bottom). For these experiments, the ATLAS matrix-matrix multiplication kernel was used.}}{130}}
\newlabel{fig:trsm_rut:lazy-row-lazy:ATLAS}{{9.8}{130}}
\@setckpt{trsm_rut/trsm_rut}{
\setcounter{page}{131}
\setcounter{equation}{9}
\setcounter{enumi}{3}
\setcounter{enumii}{0}
\setcounter{enumiii}{0}
\setcounter{enumiv}{0}
\setcounter{footnote}{0}
\setcounter{mpfootnote}{0}
\setcounter{part}{0}
\setcounter{chapter}{9}
\setcounter{section}{2}
\setcounter{subsection}{0}
\setcounter{subsubsection}{0}
\setcounter{paragraph}{0}
\setcounter{subparagraph}{0}
\setcounter{figure}{8}
\setcounter{table}{0}
\setcounter{r@tfl@t}{0}
\setcounter{note}{1}
\setcounter{algorithm}{0}
\setcounter{theorem}{10}
\setcounter{lemma}{0}
\setcounter{corollary}{0}
\setcounter{definition}{0}
\setcounter{stepnumber}{0}
}
