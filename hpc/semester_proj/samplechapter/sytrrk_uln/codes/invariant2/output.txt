% callibrate clock: elapsed time = 0.925306
% modify dclock_s.s in the obvious way
% number of repeats:

% Note: the columns marked with diff give
% the difference in the results between the reference
% implementation and your implementation.
% This should be small

% Performance in MFLOPS/sec (1e6 flops per second)

%   n   n  nb    REF unblocked diff   blocked   diff   recursive   diff
% =======================================================================
data = [
% enter n, nb_alg:
  50   50  40    1.0    1.4  7.28e-12   36.1  7.28e-12   40.6  7.28e-12
% enter n, nb_alg:
 100  100  40    9.8   94.2  5.82e-11   96.9  5.82e-11   95.2  5.82e-11
% enter n, nb_alg:
 150  150  40   79.7  132.2  2.33e-10  131.8  2.33e-10  101.8  2.33e-10
% enter n, nb_alg:
 200  200  40   91.9  138.5  4.66e-10  147.6  9.31e-10  143.0  4.66e-10
% enter n, nb_alg:
 250  250  40   90.3  158.3  9.31e-10  160.2  1.86e-09  147.1  1.86e-09
% enter n, nb_alg:
 500  500  40  109.8  111.5  1.49e-08  206.6  1.49e-08  203.7  1.49e-08
% enter n, nb_alg:
 750  750  40  118.5   93.3  5.96e-08  239.7  8.94e-08  239.9  8.94e-08
% enter n, nb_alg:
1000 1000  40  124.3   94.7  1.19e-07  257.3  1.79e-07  256.8  1.79e-07
% enter n, nb_alg:
];

plot( data( :,1 ), data( :, 4 ), '-x', ...
      data( :,1 ), data( :, 5 ), '-*', ...
      data( :,1 ), data( :, 7 ), '-o', ...
      data( :,1 ), data( :, 9 ), '-+' ); 
legend( 'Reference', 'unblocked', 'blocked', 'recursive', 5 ); 
xlabel( 'matrix dimension n' );
ylabel( 'MFLOPS/sec.' );
axis( [ 0 1000 0 600 ] ); 
print -depsc2 sytrrk_uln_inv2.eps
